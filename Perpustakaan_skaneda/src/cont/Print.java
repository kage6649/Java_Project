/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cont;
import java.sql.*;

import java.io.FileOutputStream;
import java.util.Date;

import com.itextpdf.text.*;
import com.itextpdf.text.pdf.*;


/**
 *
 * @author Eater
 */
public class Print {
    //font pdf file
    private static Font catFont = new Font(Font.FontFamily.TIMES_ROMAN, 18,
            Font.BOLD);
    private static Font redFont = new Font(Font.FontFamily.TIMES_ROMAN, 12,
            Font.NORMAL, BaseColor.RED);
    private static Font subFont = new Font(Font.FontFamily.TIMES_ROMAN, 16,
            Font.BOLD);
    private static Font smallBold = new Font(Font.FontFamily.TIMES_ROMAN, 12,
            Font.BOLD);
    private static Font small = new Font(Font.FontFamily.TIMES_ROMAN, 10,
            Font.NORMAL);
    
    private static void addMetaData(Document document) {
        document.addTitle("PDF Report");
        document.addSubject("Using iText");
        document.addKeywords("Java, PDF, Perpustakaan");
        document.addAuthor("Rajib Firdaus");
        document.addCreator("Rajib Firdaus");
    }
    
    private static void addTitlePage(Document document)
            throws DocumentException {
        Paragraph preface = new Paragraph();
        // We add one empty line
        addEmptyLine(preface, 1);
        // Lets write a big header
        preface.add(new Paragraph("Data Perpustakaan", catFont));

        addEmptyLine(preface, 1);
        // Will create: Report generated by: _name, _date
        preface.add(new Paragraph(
                "Report generated by: " + System.getProperty("user.name") + ", " + new Date(), //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
                smallBold));
        // now add all this to the document
        document.add(preface);
    }

    private static void addEmptyLine(Paragraph paragraph, int number) {
        for (int i = 0; i < number; i++) {
            paragraph.add(new Paragraph(" "));
        }
    }
    
    private static void addContentRak(Document document) throws DocumentException {
        Anchor anchor = new Anchor("Table Rak", catFont);
        anchor.setName("Table Rak");
        Paragraph catPart = new Paragraph(anchor);
        
        Paragraph paragraph = new Paragraph();
        addEmptyLine(paragraph, 1);
        
        catPart.add(paragraph);
        // Number of Colomn
        PdfPTable table = new PdfPTable(3);
//         Create Header of Table 
            PdfPCell hc;
            hc = new PdfPCell(new Phrase("ID",smallBold));
            hc.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(hc);
            hc = new PdfPCell(new Phrase("Nama",smallBold));
            hc.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(hc);
            hc = new PdfPCell(new Phrase("Baris",smallBold));
            hc.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(hc);
            
        table.setHeaderRows(1);
            try {
            cont c = new cont();
            Class.forName(c.JD);
            c.cont=DriverManager.getConnection(c.DB);
            c.stm=c.cont.createStatement();
            
            String q = "SELECT*FROM APP.RAK";
            c.rs=c.stm.executeQuery(q);
               // loop to add record to table
               if (c.rs.next()) {
                    while (c.rs.next()) {
                table.addCell(new Phrase(" "+c.rs.getString("id_rak"),small));
                table.addCell(new Phrase(" "+c.rs.getString("nama_rak"),small));
                table.addCell(new Phrase(" "+c.rs.getString("baris_rak"),small));
                }
                catPart.add(table);
                }else{
                     paragraph.add(new Paragraph(
                "Data Tidak Ada",redFont));
                }
            
        c.stm.close();c.cont.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
        // now add all this to the document
        document.add(catPart);
    }
    
    private static void addContentAnggota(Document document) throws DocumentException {
        Anchor anchor = new Anchor("Table Anggota", catFont);
        anchor.setName("Table Anggota");
        Paragraph catPart = new Paragraph(anchor);
        
        Paragraph paragraph = new Paragraph();
        addEmptyLine(paragraph, 1);
        
        catPart.add(paragraph);
        // Number of Colomn
        PdfPTable table = new PdfPTable(6);
//         Create Header of Table 
            PdfPCell hc;
            hc = new PdfPCell(new Phrase("ID",smallBold));
            hc.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(hc);
            hc = new PdfPCell(new Phrase("Kode",smallBold));
            hc.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(hc);
            hc = new PdfPCell(new Phrase("Nama",smallBold));
            hc.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(hc);
            hc = new PdfPCell(new Phrase("Jurusan",smallBold));
            hc.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(hc);
            hc = new PdfPCell(new Phrase("No. Telp",smallBold));
            hc.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(hc);
            hc = new PdfPCell(new Phrase("Alamat",smallBold));
            hc.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(hc);
            
        table.setHeaderRows(1);
            try {
            cont c = new cont();
            Class.forName(c.JD);
            c.cont=DriverManager.getConnection(c.DB);
            c.stm=c.cont.createStatement();
            
            String q = "SELECT*FROM APP.ANGGOTA";
            c.rs=c.stm.executeQuery(q);
               // loop to add record to table
               if (c.rs.next()) {
                    while (c.rs.next()) {
                table.addCell(new Phrase(" "+c.rs.getString("id_anggota"),small));
                table.addCell(new Phrase(" "+c.rs.getString("kode_anggota"),small));
                table.addCell(new Phrase(" "+c.rs.getString("nama_anggota"),small));
                table.addCell(new Phrase(" "+c.rs.getString("jurusan_anggota"),small));
                table.addCell(new Phrase(" "+c.rs.getString("no_telp_anggota"),small));
                table.addCell(new Phrase(" "+c.rs.getString("alamat_anggota"),small));
                }
                catPart.add(table);
                }else{
                     paragraph.add(new Paragraph(
                "Data Tidak Ada",redFont));
                }
            
        c.stm.close();c.cont.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
        // now add all this to the document
        document.add(catPart);
    }
    
    private static void addContentBuku(Document document) throws DocumentException {
        Anchor anchor = new Anchor("Table Buku", catFont);
        anchor.setName("Table Buku");
        Paragraph catPart = new Paragraph(anchor);
        
        Paragraph paragraph = new Paragraph();
        addEmptyLine(paragraph, 1);
        
        catPart.add(paragraph);
        // Number of Colomn
        PdfPTable table = new PdfPTable(7);
//         Create Header of Table 
            PdfPCell hc;
            hc = new PdfPCell(new Phrase("ID",smallBold));
            hc.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(hc);
            hc = new PdfPCell(new Phrase("Kode",smallBold));
            hc.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(hc);
            hc = new PdfPCell(new Phrase("Judul",smallBold));
            hc.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(hc);
            hc = new PdfPCell(new Phrase("Penulis",smallBold));
            hc.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(hc);
            hc = new PdfPCell(new Phrase("Penerbit",smallBold));
            hc.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(hc);
            hc = new PdfPCell(new Phrase("Tahun Terbit",smallBold));
            hc.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(hc);
            hc = new PdfPCell(new Phrase("Stok",smallBold));
            hc.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(hc);
            
        table.setHeaderRows(1);
            try {
            cont c = new cont();
            Class.forName(c.JD);
            c.cont=DriverManager.getConnection(c.DB);
            c.stm=c.cont.createStatement();
            
            String q = "SELECT*FROM APP.BUKU";
            c.rs=c.stm.executeQuery(q);
               // loop to add record to table
               if (c.rs.next()) {
                    while (c.rs.next()) {
                table.addCell(new Phrase(" "+c.rs.getString("id_buku"),small));
                table.addCell(new Phrase(" "+c.rs.getString("kode_buku"),small));
                table.addCell(new Phrase(" "+c.rs.getString("judul_buku"),small));
                table.addCell(new Phrase(" "+c.rs.getString("penulis_buku"),small));
                table.addCell(new Phrase(" "+c.rs.getString("penerbit_buku"),small));
                table.addCell(new Phrase(" "+c.rs.getString("tahun_terbit"),small));
                table.addCell(new Phrase(" "+c.rs.getString("stok"),small));
                }
                catPart.add(table);
                }else{
                     paragraph.add(new Paragraph(
                "Data Tidak Ada",redFont));
                }
            
        c.stm.close();c.cont.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
        // now add all this to the document
        document.add(catPart);
    }
    
    private static void addContentPeminjaman(Document document) throws DocumentException {
        Anchor anchor = new Anchor("Table Peminjaman", catFont);
        anchor.setName("Table Peminjaman");
        Paragraph catPart = new Paragraph(anchor);
        
        Paragraph paragraph = new Paragraph();
        addEmptyLine(paragraph, 1);
        
        catPart.add(paragraph);
        // Number of Colomn
        PdfPTable table = new PdfPTable(5);
//         Create Header of Table 
            PdfPCell hc;
            hc = new PdfPCell(new Phrase("ID",smallBold));
            hc.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(hc);
            hc = new PdfPCell(new Phrase("Tgl. Pinjam",smallBold));
            hc.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(hc);
            hc = new PdfPCell(new Phrase("Tgl. Kembali",smallBold));
            hc.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(hc);
            hc = new PdfPCell(new Phrase("id_buku",smallBold));
            hc.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(hc);
            hc = new PdfPCell(new Phrase("id_anggota",smallBold));
            hc.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(hc);
            
        table.setHeaderRows(1);
            try {
            cont c = new cont();
            Class.forName(c.JD);
            c.cont=DriverManager.getConnection(c.DB);
            c.stm=c.cont.createStatement();
            
            String q = "SELECT*FROM APP.PEMINJAMAN";
            c.rs=c.stm.executeQuery(q);
               // loop to add record to table
                if (c.rs.next()) {
                    while (c.rs.next()) {
                table.addCell(new Phrase(" "+c.rs.getString("id_peminjaman"),small));
                table.addCell(new Phrase(" "+c.rs.getString("tanggal_pinjam"),small));
                table.addCell(new Phrase(" "+c.rs.getString("tanggal_kembali"),small));
                table.addCell(new Phrase(" "+c.rs.getString("id_buku"),small));
                table.addCell(new Phrase(" "+c.rs.getString("id_anggota"),small));
                }
                catPart.add(table);
                }else{
                     paragraph.add(new Paragraph(
                "Data Tidak Ada",redFont));
                }
            
        c.stm.close();c.cont.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
        // now add all this to the document
        document.add(catPart);
    }
    
    private static void addContentPengembalian(Document document) throws DocumentException {
        Anchor anchor = new Anchor("Table Pengembalian", catFont);
        anchor.setName("Table Pengembalian");
        Paragraph catPart = new Paragraph(anchor);
        
        Paragraph paragraph = new Paragraph();
        addEmptyLine(paragraph, 1);
        
        catPart.add(paragraph);
        // Number of Colomn
        PdfPTable table = new PdfPTable(5);
//         Create Header of Table 
            PdfPCell hc;
            hc = new PdfPCell(new Phrase("ID",smallBold));
            hc.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(hc);
            hc = new PdfPCell(new Phrase("Tgl. Kembali",smallBold));
            hc.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(hc);
            hc = new PdfPCell(new Phrase("Denda",smallBold));
            hc.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(hc);
            hc = new PdfPCell(new Phrase("id_buku",smallBold));
            hc.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(hc);
            hc = new PdfPCell(new Phrase("id_anggota",smallBold));
            hc.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(hc);
            
        table.setHeaderRows(1);
            try {
            cont c = new cont();
            Class.forName(c.JD);
            c.cont=DriverManager.getConnection(c.DB);
            c.stm=c.cont.createStatement();
            
            String q = "SELECT*FROM APP.PENGEMBALIAN";
            c.rs=c.stm.executeQuery(q);
               // loop to add record to table
                if (c.rs.next()) {
                    while (c.rs.next()) {
                table.addCell(new Phrase(" "+c.rs.getString("id_peminjaman"),small));
                table.addCell(new Phrase(" "+c.rs.getString("tanggal_pengembalian"),small));
                table.addCell(new Phrase(" "+c.rs.getString("denda"),small));
                table.addCell(new Phrase(" "+c.rs.getString("id_buku"),small));
                table.addCell(new Phrase(" "+c.rs.getString("id_anggota"),small));
                }
                catPart.add(table);
                }else{
                     paragraph.add(new Paragraph(
                "Data Tidak Ada",redFont));
                }
            
        c.stm.close();c.cont.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
        // now add all this to the document
        document.add(catPart);
    }
    
    
    public static void print(String file, String choose){
        try {
                
            Document document = new Document();
                PdfWriter.getInstance(document, new FileOutputStream(file));
                document.open();
                addMetaData(document);
                addTitlePage(document);
                
                if (choose.equals("rak")) {
                    addContentRak(document);
            }if (choose.equals("anggota")) {
                    addContentAnggota(document);
            }if (choose.equals("buku")) {
                    addContentBuku(document);
            }if (choose.equals("peminjaman")) {
                    addContentPeminjaman(document);
            }if (choose.equals("pengembalian")) {
                    addContentPengembalian(document);
            }if (choose.equals("all")) {
                addContentAnggota(document);
                addContentBuku(document);
                addContentPeminjaman(document);
                addContentPengembalian(document);
                addContentRak(document);
            }
                
                document.close();
            } catch (Exception e) {
                e.printStackTrace();
            }
    }
    
}
