/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package test;
import java.sql.*;
import java.io.FileOutputStream;
import java.util.Date;

import com.itextpdf.text.*;
import com.itextpdf.text.pdf.*;
/**
 *
 * @author eater48
 * 
 * exemple to create autoincrement
 * create table "APP".RAK
(
	ID INTEGER PRIMARY KEY GENERATED ALWAYS AS IDENTITY(Start with 1, Increment by 1),
        NAMA VARCHAR(25)
)
* 
 */
public class gg {
    public static final String JD = "org.apache.derby.jdbc.EmbeddedDriver";
    public static final String DB = "jdbc:derby://localhost:1527/Q2P;create=true";
    
    static Connection con;
    static Statement stm;
    static ResultSet rs;
    static String file = "test.pdf";
    
    private static Font catFont = new Font(Font.FontFamily.TIMES_ROMAN, 18,
            Font.BOLD);
    private static Font redFont = new Font(Font.FontFamily.TIMES_ROMAN, 12,
            Font.NORMAL, BaseColor.RED);
    private static Font subFont = new Font(Font.FontFamily.TIMES_ROMAN, 16,
            Font.BOLD);
    private static Font smallBold = new Font(Font.FontFamily.TIMES_ROMAN, 12,
            Font.BOLD);
    
    public static void main(String[] args) {
        
            
            try {
                
            Document document = new Document();
                PdfWriter.getInstance(document, new FileOutputStream(file));
                document.open();
                addMetaData(document);
                addTitlePage(document);
                addContent(document);
                document.close();
                
            
            } catch (Exception e) {
                e.printStackTrace();
            }
            
            
    }
     // iText allows to add metadata to the PDF which can be viewed in your Adobe
    // Reader
    // under File -> Properties
    private static void addMetaData(Document document) {
        document.addTitle("My first PDF");
        document.addSubject("Using iText");
        document.addKeywords("Java, PDF, iText");
        document.addAuthor("Rajib Firdaus");
        document.addCreator("Rajib Firdaus");
    }
    private static void addTitlePage(Document document)
            throws DocumentException {
        Paragraph preface = new Paragraph();
        // We add one empty line
        addEmptyLine(preface, 1);
        // Lets write a big header
        preface.add(new Paragraph("Title of the document", catFont));

        addEmptyLine(preface, 1);
        // Will create: Report generated by: _name, _date
        preface.add(new Paragraph(
                "Report generated by: " + System.getProperty("user.name") + ", " + new Date(), //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
                smallBold));
//        addEmptyLine(preface, 3);
//        preface.add(new Paragraph(
//                "This document describes something which is very important ",
//                smallBold));
//
//        addEmptyLine(preface, 8);
//
//        preface.add(new Paragraph(
//                "This document is a preliminary version and not subject to your license agreement or any other agreement with vogella.com ;-).",
//                redFont));
//

        // now add all this to the document
        document.add(preface);
//        // Start a new page
//        document.newPage();
    }

    private static void addContent(Document document) throws DocumentException {
        Anchor anchor = new Anchor("Table Rak", catFont);
        anchor.setName("Table Rak");

        // Second parameter is the number of the chapter
//        Chapter catPart = new Chapter(new Paragraph(anchor), 1);
            Paragraph catPart = new Paragraph(anchor);

//        Paragraph subPara = new Paragraph("Subcategory 1", subFont);
//        Section subCatPart = catPart.addSection(subPara);
//        subCatPart.add(new Paragraph("Hello"));

//        subPara = new Paragraph("Subcategory 2", subFont);
//        subCatPart = catPart.addSection(subPara);
//        subCatPart.add(new Paragraph("Paragraph 1"));
//        subCatPart.add(new Paragraph("Paragraph 2"));
//        subCatPart.add(new Paragraph("Paragraph 3"));

        // add a list
//        createList(subCatPart);
        Paragraph paragraph = new Paragraph();
        addEmptyLine(paragraph, 1);
        
        catPart.add(paragraph);

        // add a table
        createTable(catPart);

        // now add all this to the document
        document.add(catPart);

//        // Next section
//        anchor = new Anchor("Second Chapter", catFont);
//        anchor.setName("Second Chapter");
//
//        // Second parameter is the number of the chapter
//        catPart = new Chapter(new Paragraph(anchor), 1);
//
//        subPara = new Paragraph("Subcategory", subFont);
//        subCatPart = catPart.addSection(subPara);
//        subCatPart.add(new Paragraph("This is a very important message"));
//
//        // now add all this to the document
//        document.add(catPart);

    }

    private static void createTable(Paragraph subCatPart)
            throws BadElementException {
        // Number of Colomn
        PdfPTable table = new PdfPTable(2);
        

        // t.setBorderColor(BaseColor.GRAY);
        // t.setPadding(4);
        // t.setSpacing(4);
        // t.setBorderWidth(1);

//        PdfPCell c1 = new PdfPCell(new Phrase("Table Header 1"));
//        c1.setHorizontalAlignment(Element.ALIGN_CENTER);
//        table.addCell(c1);
//
//        c1 = new PdfPCell(new Phrase("Table Header 2"));
//        c1.setHorizontalAlignment(Element.ALIGN_CENTER);
//        table.addCell(c1);
//
//        c1 = new PdfPCell(new Phrase("Table Header 3"));
//        c1.setHorizontalAlignment(Element.ALIGN_CENTER);
//        table.addCell(c1);

//         Create Header of Table 
            PdfPCell hc;
            
            hc = new PdfPCell(new Phrase("ID"));
            hc.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(hc);
            hc = new PdfPCell(new Phrase("Nama"));
            hc.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(hc);
            
        table.setHeaderRows(1);

//        table.addCell("1.0");
//        table.addCell("1.1");
//        table.addCell("1.2");
//        table.addCell("2.1");
//        table.addCell("2.2");
//        table.addCell("2.3");
            try {
            Class.forName(JD);
            con=DriverManager.getConnection(DB);
            stm=con.createStatement();
            
            String q = "SELECT*FROM APP.RAK";
            rs=stm.executeQuery(q);
               // loop to add record to table
            while (rs.next()) {
                table.addCell(" "+rs.getString("id"));
                table.addCell(" "+rs.getString("nama"));
                
            
        }

        subCatPart.add(table);
        stm.close();con.close();
        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    private static void createList(Section subCatPart) {
        List list = new List(true, false, 10);
        list.add(new ListItem("First point"));
        list.add(new ListItem("Second point"));
        list.add(new ListItem("Third point"));
        subCatPart.add(list);
    }

    private static void addEmptyLine(Paragraph paragraph, int number) {
        for (int i = 0; i < number; i++) {
            paragraph.add(new Paragraph(" "));
        }
    }
}
